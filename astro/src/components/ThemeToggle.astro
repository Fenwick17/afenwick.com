---
---

<style>
  .theme-toggle {
    border-radius: 0.5rem;
    font-size: 100%;
  }

  .theme-toggle-btn {
    border-width: 0;
    border-style: solid;
    border-color: #e5e7eb;
    padding: .5rem;
    border-radius: .5rem;
    background-color: transparent;
    background-image: none;
    cursor: pointer;
    font-size; 19px;

    &:hover, &:focus {
      background-color: var(--colour-focus);

      .theme-toggle-icon {
        path {
          color: #000;
        }
      }
    }
  }

  .theme-toggle-icon {
    height: 1.25rem;
    width: 1.25rem;
  }

  html.dark {
    .theme-toggle-icon {
      path {
        color: #fff;

        &:hover {
          color: #000;
        }

        &:focus {
          color: #000;
        }
      }
    }
  }
</style>

<button
  id="theme-toggle"
  type="button"
  class="theme-toggle-btn"
>
  <span id="color-toggle-text" class="visually-hidden">Change colour scheme to dark mode</span>
  <svg
    id="theme-toggle-dark-icon"
    class="theme-toggle-icon hidden"
    fill="currentColor"
    viewBox="0 0 20 20"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
    ></path>
  </svg>
  <svg
    id="theme-toggle-light-icon"
    class="theme-toggle-icon hidden"
    fill="currentColor"
    viewBox="0 0 20 20"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
      fill-rule="evenodd"
      clip-rule="evenodd"
    ></path>
  </svg>
</button>

<script>
  const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
  const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');
  const themeButtonText = document.getElementById('color-toggle-text');

  // Change the icons inside the button based on previous settings
  if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
      themeToggleLightIcon?.classList.remove('hidden');
      themeButtonText!.textContent = "Change colour scheme to light mode";
  } else {
      themeToggleDarkIcon?.classList.remove('hidden');
  }

  var themeToggleBtn = document.getElementById('theme-toggle');

  themeToggleBtn?.addEventListener('click', function() {

      // toggle icons inside button
      themeToggleDarkIcon?.classList.toggle('hidden');
      themeToggleLightIcon?.classList.toggle('hidden');

      // if set via local storage previously
      if (localStorage.getItem('color-theme')) {
          if (localStorage.getItem('color-theme') === 'light') {
              document.documentElement.classList.add('dark');
              localStorage.setItem('color-theme', 'dark');
              themeButtonText!.textContent = "Change colour scheme to light mode";
          } else {
              document.documentElement.classList.remove('dark');
              localStorage.setItem('color-theme', 'light');
              themeButtonText!.textContent = "Change colour scheme to dark mode";
          }

      // if NOT set via local storage previously
      } else {
          if (document.documentElement.classList.contains('dark')) {
              document.documentElement.classList.remove('dark');
              localStorage.setItem('color-theme', 'light');
          } else {
              document.documentElement.classList.add('dark');
              localStorage.setItem('color-theme', 'dark');
          }
      }
      
  });
</script>